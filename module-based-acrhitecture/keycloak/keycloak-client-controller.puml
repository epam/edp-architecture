@startuml
entity "CR Keycloak Client" as cr_client
entity "CR Keycloak Realm" as cr_realm
entity "CR Keycloak" as cr_keycloak
entity "K8S Secret" as secret
participant "Keycloak-client-controller" as keycloak_client_controller
participant "Keycloak Server" as server

cr_client -> keycloak_client_controller: \
Read \n\
**Params**: \n\
client id \n\
secret name \n\
is public client \n\
web url \n\
direct access type enabled \n\
client roles \n\
realm roles \n\
target realm \n\
advanced protocol mappers

activate keycloak_client_controller

keycloak_client_controller -> keycloak_client_controller: Check the target realm (or use main)
keycloak_client_controller -> cr_realm : Get by Owner reference (or use main)
activate cr_realm
cr_realm -> keycloak_client_controller: Keycloak CR Owner
deactivate cr_realm
keycloak_client_controller -> cr_keycloak: Get by Owner reference
activate cr_keycloak
cr_keycloak -> keycloak_client_controller: **Params:** \n\
Keycloak Web URL \n\
Keycloak login \n\
Keycloak password
deactivate cr_keycloak

keycloak_client_controller -> secret: Get by secret name
activate secret
secret -> keycloak_client_controller: Client secret
deactivate secret

keycloak_client_controller -> keycloak_client_controller: \n\
root url = web url \n\
redirect url = web url + "\*" \n\
web origins = web url \n\
admin url = web url \n\
protocol mappers (if advanced)

keycloak_client_controller -> server: \
Create client \n\
**Params:** \n\
client id \n\
client secret \n\
is public client \n\
realm \n\
root url \n\
redirect url \n\
web origins \n\
admin url \n\
direct access type enabled \n\
protocol mappers \n\

keycloak_client_controller -> server: Create realm roles
keycloak_client_controller -> server: Add realm role to composite role
keycloak_client_controller -> server: Create client roles

deactivate keycloak_client_controller

@enduml