@startuml

package com.epam.edp.cd {
  class CdPipeline {
    -- metadata --
    -- spec --
      CodebaseArtifactStream[] applications
      ThirdPartyService[] services
    -- status --
    -- reconcile --
    +JenkinsFolderCr
  }
  CdPipeline -d-> ThirdPartyService: create
  CdPipeline -d-> CdPipelineStage: create

  class CdPipelineStage {
    -- metadata --
    -- spec --
      CdQualityGate[] qualityGates
      TriggerType triggerType
    -- status --
    -- reconcile --
    +JenkinsJobCr
  }
  CdPipelineStage -d-> CdQualityGate: create
  CdPipelineStage -u-> CodebaseArtifactStream : create input stream
  CdPipelineStage -u-> CodebaseArtifactStream : create output stream
  CdPipelineStage ..> CdPipelineStage : owner ref next stage

  enum TriggerType {
    MANUAL
    NEW_ARTIFACT
  }
  CdPipelineStage --> TriggerType

  class CdQualityGate {
    -- metadata --
    -- spec --
      CdQualityGateType type
      CodebaseBranch autotest
      String command2Run
      String command2CheckQualityGate
    -- status --

  }
  CdQualityGate .up.> CodebaseBranch: owner ref

  class CdStageDeploy {
    -- metadata --
    -- spec --
      CdPipelineStage stage
      CodebaseArtifact: artifacts
    -- status --
  }
  CdStageDeploy .u.> CdPipelineStage :owner ref
}

legend
|= arrow   |= meaning|
|  ..>     |   owner references  |
|  -->     |   creates     |
|<back:LightGoldenRodYellow>    </back>| Work In Progress |
|<back:LightGreen>    </back>| Implemented |
|<back:Khaki>    </back>| TBD |
endlegend

skinparam class {
	backgroundColor<<impl>> LightGoldenRodYellow
	backgroundColor<<wip>> LightGreen
	backgroundColor<<tbd>> Khaki
}
@enduml