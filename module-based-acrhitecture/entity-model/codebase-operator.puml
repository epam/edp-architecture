@startuml

package com.epam.edp.codebase {

  class EdpComponent {
    -- metadata --
    String name
    -- spec --
    String componentType
    String url
    String icon
    -- status --
  }


  class GitServer {
    -- metadata --
      String name
    -- spec --
      String gitHost
      String gitUser
      String httpsPort
      String sshPort
      GitServerSecret nameSshKeySecret
      boolean createCodeReviewPipeline
    -- status --
      boolean available
  }
  EdpComponent <.u. GitServer : "owner reference"

  class GitServerSecret <extends Secret> {
    -- metadata --
      String name
    -- data --
      String id_rsa
      String id_rsa.pub
      String username
  }
  GitServerSecret <-d- GitServer : "reference by nameSshKeySecret"


  class GitRepository <<tbd>> {
    -- metadata --
      String name
    -- spec --
    -- status --
      boolean available
  }
  GitRepository .u.> GitServer : "owner reference"


  class Codebase {
    -- metadata --
    -- spec --
    String name
    CodebaseType type
    VCS
    techFramework
    -- status --
    -- reconcile --
    +JenkinsFolderCr
    +GitRepositoryCr
  }

  enum CodebaseType {
    APPLICATION
    AUTOTESTS
    LIBRARY
  }
  Codebase -left-> CodebaseType

  class TechologyFramework {
    -- metadata --
    -- spec --
      String language
      String jenkinsSlaveAlias
      String jenkinsSlaveVersion
    -- status --
  }
  TechologyFramework -up[hidden]-> CodebaseType
  Codebase --> TechologyFramework :create

  class CodebaseBranch {
    -- metadata --
    -- spec --
      + String name
    -- status --
    -- reconcile --
    +JenkinsJobCrs
    +GitBranchCr
  }
  CodebaseBranch .u.>  Codebase : "owner ref"
  CodebaseBranch -r-> CodebaseArtifactStream : create

  class CodebaseArtifact {
    -- metadata --
    -- spec --
      + String commit
      + ArtifactType type
    -- status --
      String version
      String url
  }
  CodebaseArtifact .u.> CodebaseBranch: "owner ref"

  enum ArtifactType {
    ZIP
    JAR
    DOCKER
  }
  CodebaseArtifact -left-> ArtifactType



  class CodebaseArtifactStream {
    -- metadata --
    -- spec --
      + String name
      + CodebaseArtifact[] availableArtifacts
    -- status --
      String version
      String url
  }
  CodebaseArtifact .u.> CodebaseArtifactStream : "owner ref"
  CodebaseArtifactStream *-r[hidden]- ThirdPartyService


  class ThirdPartyService {
    -- metadata --
    -- spec --
    -- status --
  }
}

legend
|= arrow   |= meaning|
|  ..>     |   owner references  |
|  -->     |   creates     |
|<back:LightGoldenRodYellow>    </back>| Work In Progress |
|<back:LightGreen>    </back>| Implemented |
|<back:Khaki>    </back>| TBD |
endlegend

skinparam class {
	backgroundColor<<impl>> LightGoldenRodYellow
	backgroundColor<<wip>> LightGreen
	backgroundColor<<tbd>> Khaki
}
@enduml